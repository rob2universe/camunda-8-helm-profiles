# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

region ?= southeastasia
clusterName ?= camaks
resourceGroup ?= camaks-rg
# This dnsLabel value will be used like so: MY_DOMAIN_NAME.region.cloudapp.azure.com
dnsLabel ?= camapac
machineType ?= Standard_A8_v2
minSize ?= 1
maxSize ?= 6
certEmail ?= robert.emsbach@camunda.com

# ------------------------------------
# The following variables should not be changed except for advanced use cases

root ?= $(shell pwd)/../../../../..
fqdn ?= ${dnsLabel}.${region}.cloudapp.azure.com
# fqdn = $(IP).nip.io

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= camunda-values-nginx-tls.yaml

.PHONY: all
all: cert-manager letsencrypt-prod nginx-dns-tls camunda-values-nginx-tls.yaml kc-interceptor-config camunda annotate-ingress-tls external-urls

# 0 kube-nginx from aks.mk: Create Kubernetes cluster (no aplication gateway)
.PHONY: kube
kube: kube-nginx

# 1 cert-manager from cert-manager.mk: create certificate manager for tls

# 2 letsencrypt-staging/-prod from cert-manager.mk: create letsencrypt cert issuer

# 3 nginx-dns-tls from nginx-tls: create nginx ingress controller with dns and tls

# 4 camunda-values-nginx-tls.yaml from nginx-tls: create camunda-values-nginx.yaml with fqdn

# 5 Add keycloak interceptor config map
.PHONY: kc-interceptor-config
zb-kc-interceptor-config: 
	kubectl create namespace $(namespace)
	kubectl apply -f zb-kc-interceptor-config.yaml -n $(namespace)

# 6 helm install camunda from camunda.mk with own tls config, combined ingress

# 7 annotate-ingress-tls from cert-manager.mk: add cluster-issuer annotation to nginx

# 8 Show external URLs

# 9 public-zeebe-ingress : add an ingress for GRPC communication to zeebe-gateway

# Optional: Run 'make config-keycloak' from camunda.mk to allow non-ssl connections to Keycloak

### <--- End of setup --->

# Update existing keycloak interceptor config
.PHONY: update-zb-kc-interceptor-config
update-zb-kc-interceptor-config: 
	kubectl apply -f zb-kc-interceptor-config.yaml -n $(namespace)

# Remove nginx ingress and Camunda from cluster
.PHONY: clean
clean: clean-camunda clean-ingress clean-cert-manager
	rm -f $(chartValues)

include $(root)/include/camunda.mk
include $(root)/include/ingress-nginx.mk
include $(root)/include/cert-manager.mk
include $(root)/azure/include/aks.mk
include $(root)/azure/ingress/include/azure-ingress.mk
include $(root)/azure/ingress/nginx/tls/include/nginx-tls.mk

# include $(root)/include/zbctl.mk


